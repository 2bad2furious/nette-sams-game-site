<?php


use Nette\Application\UI\Presenter;

abstract class BasePresenter extends Presenter {
    const API_METHOD = "api",
        HTML_METHOD = "html",
        METHODS = [self::API_METHOD, self::HTML_METHOD];

    const SOMETHING_WENT_WRONG = "something_went_wrong",
        NO_PARAMETER_RECEIVED = "no_parameter_received";

    protected function startup() {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    public function beforeRender() {
        $this->template->setTranslator(Translator::instance());
    }

    public function createComponentHeader($name) {
        return new HeaderControl($this, $name);
    }

    public function createComponentProfile($name) {
        return new ProfileControl($this, $name);
    }

    public function getUserManager(): UserManager {
        $authenticator = $this->getUser()->getAuthenticator(true);
        if ($authenticator instanceof UserManager)
            return $authenticator;
        throw new Exception("Wrong type of Authenticator");
    }

    protected function isApiMethod(): bool {
        return $this->getParameter("method") === self::API_METHOD;
    }

    protected function isHtmlMethod(): bool {
        return $this->getParameter("method") === self::HTML_METHOD;
    }
}